{"version":3,"sources":["../src/types.ts"],"sourcesContent":["/**\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type { InstrumentationConfigMap } from '@opentelemetry/auto-instrumentations-node';\nimport type { Instrumentation } from '@opentelemetry/instrumentation';\nimport type { Sampler } from '@opentelemetry/sdk-trace-base';\nimport type { JWTInput } from 'google-auth-library';\n\n/** Configuration options for the Google Cloud plugin. */\nexport interface GcpTelemetryConfigOptions {\n  /**\n   * Google Cloud Project ID. If provided, will take precedence over the\n   * projectId inferred from the application credential and/or environment.\n   * Required when providing an external credential (e.g. Workload Identity\n   * Federation.)\n   */\n  projectId?: string;\n\n  /**\n   * Credentials for authenticating with Google Cloud. Primarily intended for\n   * use in environments outside of GCP. On GCP credentials will typically be\n   * inferred from the environment via Application Default Credentials (ADC).\n   */\n  credentials?: JWTInput;\n\n  /**\n   * OpenTelemetry sampler; controls the number of traces collected and exported\n   * to Google Cloud. Defaults to AlwaysOnSampler, which will collect and export\n   * all traces.\n   *\n   * There are four built-in samplers to choose from:\n   *\n   * - {@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/sampler/AlwaysOnSampler.ts | AlwaysOnSampler} - samples all traces\n   * - {@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/sampler/AlwaysOffSampler.ts | AlwaysOffSampler} - samples no traces\n   * - {@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/sampler/ParentBasedSampler.ts | ParentBasedSampler} - samples based on parent span\n   * - {@link https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/sampler/TraceIdRatioBasedSampler.ts | TraceIdRatioBasedSampler} - samples a configurable percentage of traces\n   */\n  sampler?: Sampler;\n\n  /**\n   * Enabled by default, OpenTelemetry will automatically collect telemetry for\n   * popular libraries via auto instrumentations without any additional code\n   * or configuration. All available instrumentations will be collected, unless\n   * otherwise specified via {@link autoInstrumentationConfig}.\n   *\n   * @see https://opentelemetry.io/docs/zero-code/js/\n   */\n  autoInstrumentation?: boolean;\n\n  /**\n   * Map of auto instrumentations and their configuration options. Available\n   * options will vary by instrumentation.\n   *\n   * @see https://opentelemetry.io/docs/zero-code/js/\n   */\n  autoInstrumentationConfig?: InstrumentationConfigMap;\n\n  /**\n   * Additional OpenTelemetry instrumentations to include, beyond those\n   * provided by auto instrumentations.\n   */\n  instrumentations?: Instrumentation[];\n\n  /**\n   * Metrics export interval in milliseconds; Google Cloud requires a minimum\n   * value of 5000ms.\n   */\n  metricExportIntervalMillis?: number;\n\n  /**\n   * Timeout for the metrics export in milliseconds.\n   */\n  metricExportTimeoutMillis?: number;\n\n  /**\n   * If set to true, metrics will not be exported to Google Cloud. Traces and\n   * logs may still be exported.\n   */\n  disableMetrics?: boolean;\n\n  /**\n   * If set to true, traces will not be exported to Google Cloud. Metrics and\n   * logs may still be exported.\n   */\n  disableTraces?: boolean;\n\n  /**\n   * If set to true, input and output logs will not be collected.\n   */\n  disableLoggingInputAndOutput?: boolean;\n\n  /**\n   * If set to true, telemetry data will be exported in the Genkit `dev`\n   * environment. Useful for local testing and troubleshooting; default is\n   * false.\n   */\n  forceDevExport?: boolean;\n}\n\n/** Internal telemetry configuration. */\nexport interface GcpTelemetryConfig {\n  projectId?: string;\n  credentials?: JWTInput;\n\n  sampler: Sampler;\n  autoInstrumentation: boolean;\n  autoInstrumentationConfig: InstrumentationConfigMap;\n  metricExportIntervalMillis: number;\n  metricExportTimeoutMillis: number;\n  instrumentations: Instrumentation[];\n  disableMetrics: boolean;\n  disableTraces: boolean;\n  exportInputAndOutput: boolean;\n  export: boolean;\n}\n\nexport interface GcpPrincipal {\n  projectId?: string;\n  serviceAccountEmail?: string;\n}\n"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;","names":[]}